
	--CREATES------------------------------------------------
CREATE EXTENSION pgcrypto;

CREATE TABLE SALAO (
	ID_SALAO SERIAL,
	ID_DONO_SALAO SERIAL,
	NOME_SALAO VARCHAR(255),
	ENDERECO_SALAO VARCHAR(255),
	FONE_SALAO VARCHAR(45)
);

ALTER TABLE SALAO
	ADD PRIMARY KEY (ID_SALAO),
	ADD FOREIGN KEY (ID_DONO_SALAO) REFERENCES USUARIOS(ID_USUARIO);
	

CREATE TABLE USUARIOS (
	ID_USUARIO SERIAL,
	NOME_USUARIO VARCHAR (255),
	EMAIL_USUARIO VARCHAR (255),
	FONE_USUARIO VARCHAR(45),
	SENHA_USUARIO VARCHAR(255),
	IS_ADMIN BOOLEAN
);

ALTER TABLE USUARIOS
	ADD PRIMARY KEY (ID_USUARIO)

CREATE TABLE FUNCIONARIOS (
	ID_FUNCIONARIO SERIAL,
	ID_USUARIO SERIAL,
	ID_SALAO SERIAL
);

ALTER TABLE FUNCIONARIOS
	ADD PRIMARY KEY (ID_FUNCIONARIO),
	ADD FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO)

CREATE TABLE ESPECIALIDADES(
	ID_ESPECIALIDADE SERIAL,
	NOME_ESPECIALIDADE VARCHAR(45)
);

ALTER TABLE ESPECIALIDADES 
	ADD PRIMARY KEY (ID_ESPECIALIDADE)

CREATE TABLE FUNCIONARIOS_ESPECIALIDADES(
	ID_FUNCIONARIO SERIAL,
	ID_ESPECIALIDADE SERIAL
);

ALTER TABLE FUNCIONARIOS_ESPECIALIDADES
	ADD FOREIGN KEY (ID_FUNCIONARIO) REFERENCES FUNCIONARIOS(ID_FUNCIONARIO),
	ADD FOREIGN KEY (ID_ESPECIALIDADE) REFERENCES ESPECIALIDADES(ID_ESPECIALIDADE)

CREATE TABLE SERVICOS (
	ID_SERVICO SERIAL,
	ID_ESPECIALIDADE SERIAL,
	NOME_SERVICO VARCHAR(45),
	CUSTO_SERVICO INT,
	DURACAO_SERVICO INT
);

ALTER TABLE SERVICOS
	ADD PRIMARY KEY (ID_SERVICO),
	ADD FOREIGN KEY (ID_ESPECIALIDADE) REFERENCES ESPECIALIDADES(ID_ESPECIALIDADE);

CREATE TABLE AGENDAMENTOS (
	ID_AGENDAMENTO SERIAL,
	ID_USUARIO SERIAL,
	ID_FUNCIONARIO SERIAL,
	ID_SERVICO SERIAL,
	HORA_AGENDAMENTO TIME,
	DATA_AGENDAMENTO DATE
);

ALTER TABLE AGENDAMENTOS
	ADD PRIMARY KEY (ID_AGENDAMENTO),
	ADD FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO),
	ADD FOREIGN KEY (ID_FUNCIONARIO) REFERENCES FUNCIONARIOS(ID_FUNCIONARIO),
	ADD FOREIGN KEY (ID_SERVICO) REFERENCES SERVICOS(ID_SERVICO);

CREATE TABLE HISTORICO_AGENDAMENTOS(
	ID_AGENDAMENTO SERIAL,
	ID_USUARIO SERIAL,
	ID_FUNCIONARIO SERIAL,
	ID_SERVICO SERIAL,
	HORA_AGENDAMENTO TIME,
	DATA_AGENDAMENTO DATE
);

--INSERTS------------------------------------------------
	
INSERT INTO USUARIOS (NOME_USUARIO, EMAIL_USUARIO, FONE_USUARIO, SENHA_USUARIO, IS_ADMIN)
VALUES
	('ANA RITA MARTINS', 'anarita@email.com', '19992346756', (crypt('SENHA', gen_salt('bf'))), TRUE);

INSERT INTO SALAO (ID_DONO_SALAO, NOME_SALAO, ENDERECO_SALAO, FONE_SALAO)
VALUES
	('1', 'SALAO DA ANA RITA', 'RUA JOAO FRANCISCHINI, 610 - PARQUE FRANCISCHINI', '1938722865');

INSERT INTO ESPECIALIDADES (NOME_ESPECIALIDADE)
VALUES
	('CABELO');

INSERT INTO FUNCIONARIOS (ID_USUARIO, ID_SALAO)
VALUES 
	(1, 1);

INSERT INTO FUNCIONARIOS_ESPECIALIDADES
VALUES 
	(1, 1);

INSERT INTO SERVICOS (ID_ESPECIALIDADE, NOME_SERVICO, CUSTO_SERVICO, DURACAO_SERVICO)
VALUES
	('1', 'CORTE', 60, 45);
	
INSERT INTO AGENDAMENTOS (ID_USUARIO, ID_FUNCIONARIO, ID_SERVICO, HORA_AGENDAMENTO, DATA_AGENDAMENTO)
VALUES
	(10, 1, 3, '10:00:00', '2023-10-22');

SELECT * FROM AGENDAMENTOS

--TESTES DE INSERTS---------------------------------

INSERT INTO USUARIOS (NOME_USUARIO, EMAIL_USUARIO, FONE_USUARIO, SENHA_USUARIO, IS_ADMIN)
VALUES
	('Maria do Carmo', 'mariacarmo@email.com', '19987654321', (crypt('SENHA1', gen_salt('bf'))), FALSE),
	('José da Silva', 'josedasilva@email.com', '19981234567', (crypt('SENHA2', gen_salt('bf'))), FALSE),
	('Ana Souza', 'anasouza@email.com', '19983456789', (crypt('SENHA3', gen_salt('bf'))), FALSE),
	('João Pereira', 'joaopereira@email.com', '19987654321', (crypt('SENHA4', gen_salt('bf'))), FALSE),
	('Fernanda Oliveira', 'fernandaoliveira@email.com', '19981234567', (crypt('SENHA5', gen_salt('bf'))), FALSE),
	('Ricardo Santos', 'ricardosantos@email.com', '19983456789', (crypt('SENHA6', gen_salt('bf'))), FALSE),
	('Patrícia Lima', 'patricialima@email.com', '19987654321', (crypt('SENHA7', gen_salt('bf'))), FALSE),
	('Daniel Almeida', 'danielalmeida@email.com', '19981234567', (crypt('SENHA8', gen_salt('bf'))), FALSE),
	('Carla Rodrigues', 'carlarodrigues@email.com', '19983456789', (crypt('SENHA9', gen_salt('bf'))), FALSE),
	('André Martins', 'andremartins@email.com', '19987654321', (crypt('SENHA10', gen_salt('bf'))), FALSE);

INSERT INTO FUNCIONARIOS (ID_USUARIO, ID_SALAO)
VALUES
	(2, 1), 
	(3, 1), 
	(4, 1), 
	(5, 1), 
	(6, 1); 
	
INSERT INTO ESPECIALIDADES (NOME_ESPECIALIDADE)
VALUES
	('CABELO'),
	('UNHA'),
	('DEPILACAO');
	
INSERT INTO FUNCIONARIOS_ESPECIALIDADES
VALUES
	(2, 2),
	(2, 3),
	(3, 1),
	(3, 3),
	(4, 1),
	(5, 1),
	(5, 2),
	(5, 3);


INSERT INTO SERVICOS (ID_ESPECIALIDADE, NOME_SERVICO, CUSTO_SERVICO, DURACAO_SERVICO)
VALUES
	(1, 'Corte Masculino', 30, 30),
	(1, 'Corte Feminino', 40, 45),
	(1, 'Escova', 35, 40),
	(1, 'Hidratação Capilar', 50, 60),
	(1, 'Coloração de Cabelo', 60, 75),
	(2, 'Manicure Simples', 25, 30),
	(2, 'Pedicure', 30, 40),
	(2, 'Unhas de Gel', 45, 60),
	(2, 'Unhas Decoradas', 50, 75),
	(3, 'Depilação de Pernas', 40, 45),
	(3, 'Depilação de Axilas', 20, 30),
	(3, 'Depilação de Virilha', 35, 40),
	(3, 'Depilação de Buço', 15, 20);
	
	SELECT * FROM HISTORICO_AGENDAMENTOS
	DELETE FROM AGENDAMENTOS
	WHERE ID_USUARIO = 10;
	
	SELECT * FROM SERVICOS
	WHERE ID_ESPECIALIDADE = 1;

SELECT U.NOME_USUARIO AS NOME_FUNCIONARIO, S.NOME_SERVICO
FROM USUARIOS U
JOIN FUNCIONARIOS F ON U.ID_USUARIO = F.ID_USUARIO
JOIN FUNCIONARIOS_ESPECIALIDADES FE ON F.ID_FUNCIONARIO = FE.ID_FUNCIONARIO
JOIN SERVICOS S ON FE.ID_ESPECIALIDADE = S.ID_ESPECIALIDADE
ORDER BY NOME_FUNCIONARIO, NOME_SERVICO;
	
--funcionários oferecem um serviço específico
SELECT U.NOME_USUARIO AS NOME_FUNCIONARIO, S.NOME_SERVICO
FROM USUARIOS U
JOIN FUNCIONARIOS F ON U.ID_USUARIO = F.ID_USUARIO
JOIN FUNCIONARIOS_ESPECIALIDADES FE ON F.ID_FUNCIONARIO = FE.ID_FUNCIONARIO
JOIN SERVICOS S ON FE.ID_ESPECIALIDADE = S.ID_ESPECIALIDADE
WHERE S.NOME_SERVICO = 'Corte Feminino';

SELECT
    cliente.NOME_USUARIO AS nome_cliente,
    profissional.NOME_USUARIO AS nome_profissional,
    SERVICOS.NOME_SERVICO,
    SERVICOS.CUSTO_SERVICO AS valor_servico,
    SERVICOS.DURACAO_SERVICO AS duracao_servico,
    AGENDAMENTOS.HORA_AGENDAMENTO,
    AGENDAMENTOS.DATA_AGENDAMENTO
FROM AGENDAMENTOS
JOIN USUARIOS cliente ON AGENDAMENTOS.ID_USUARIO = cliente.ID_USUARIO
JOIN FUNCIONARIOS ON AGENDAMENTOS.ID_FUNCIONARIO = FUNCIONARIOS.ID_FUNCIONARIO
JOIN USUARIOS profissional ON FUNCIONARIOS.ID_USUARIO = profissional.ID_USUARIO
JOIN SERVICOS ON AGENDAMENTOS.ID_SERVICO = SERVICOS.ID_SERVICO;

--FUNCOES-E-TRIGGERS--------------------------------------

CREATE OR REPLACE FUNCTION BACKUP_AGENDAMENTOS()
RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO HISTORICO_AGENDAMENTOS (ID_AGENDAMENTO, ID_USUARIO, ID_FUNCIONARIO, ID_SERVICO, HORA_AGENDAMENTO, DATA_AGENDAMENTO)
  VALUES (OLD.ID_AGENDAMENTO, OLD.ID_USUARIO, OLD.ID_FUNCIONARIO, OLD.ID_SERVICO, OLD.HORA_AGENDAMENTO, OLD.DATA_AGENDAMENTO);
  RETURN OLD;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER AGENDAMENTOS_DELETE_TRIGGER
BEFORE DELETE ON AGENDAMENTOS
FOR EACH ROW
EXECUTE FUNCTION BACKUP_AGENDAMENTOS();